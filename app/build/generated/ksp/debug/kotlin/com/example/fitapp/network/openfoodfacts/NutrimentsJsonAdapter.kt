// Code generated by moshi-kotlin-codegen. Do not edit.
@file:Suppress("DEPRECATION", "unused", "UNUSED_PARAMETER", "ClassName", "REDUNDANT_PROJECTION",
    "RedundantExplicitType", "LocalVariableName", "RedundantVisibilityModifier",
    "PLATFORM_CLASS_MAPPED_TO_KOTLIN", "IMPLICIT_NOTHING_TYPE_ARGUMENT_IN_RETURN_POSITION")

package com.example.fitapp.network.openfoodfacts

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import java.lang.NullPointerException
import kotlin.Double
import kotlin.String
import kotlin.Suppress
import kotlin.collections.emptySet
import kotlin.text.buildString

public class NutrimentsJsonAdapter(
  moshi: Moshi,
) : JsonAdapter<Nutriments>() {
  private val options: JsonReader.Options = JsonReader.Options.of("energy-kcal_100g",
      "energy-kj_100g", "energy_100g", "carbohydrates_100g", "sugars_100g", "fiber_100g",
      "proteins_100g", "fat_100g", "saturated-fat_100g", "trans-fat_100g", "cholesterol_100g",
      "sodium_100g", "salt_100g", "calcium_100g", "iron_100g", "magnesium_100g", "potassium_100g",
      "zinc_100g", "vitamin-a_100g", "vitamin-c_100g", "vitamin-d_100g", "vitamin-e_100g",
      "vitamin-k_100g", "vitamin-b1_100g", "vitamin-b2_100g", "vitamin-b6_100g", "vitamin-b12_100g",
      "folates_100g", "energy-kcal_serving", "carbohydrates_serving", "proteins_serving",
      "fat_serving", "fiber_serving", "sodium_serving")

  private val nullableDoubleAdapter: JsonAdapter<Double?> =
      moshi.adapter(Double::class.javaObjectType, emptySet(), "energyKcal100g")

  override fun toString(): String = buildString(32) {
      append("GeneratedJsonAdapter(").append("Nutriments").append(')') }

  override fun fromJson(reader: JsonReader): Nutriments {
    var energyKcal100g: Double? = null
    var energyKj100g: Double? = null
    var energy100g: Double? = null
    var carbohydrates100g: Double? = null
    var sugars100g: Double? = null
    var fiber100g: Double? = null
    var proteins100g: Double? = null
    var fat100g: Double? = null
    var saturatedFat100g: Double? = null
    var transFat100g: Double? = null
    var cholesterol100g: Double? = null
    var sodium100g: Double? = null
    var salt100g: Double? = null
    var calcium100g: Double? = null
    var iron100g: Double? = null
    var magnesium100g: Double? = null
    var potassium100g: Double? = null
    var zinc100g: Double? = null
    var vitaminA100g: Double? = null
    var vitaminC100g: Double? = null
    var vitaminD100g: Double? = null
    var vitaminE100g: Double? = null
    var vitaminK100g: Double? = null
    var vitaminB1100g: Double? = null
    var vitaminB2100g: Double? = null
    var vitaminB6100g: Double? = null
    var vitaminB12100g: Double? = null
    var folates100g: Double? = null
    var energyKcalServing: Double? = null
    var carbohydratesServing: Double? = null
    var proteinsServing: Double? = null
    var fatServing: Double? = null
    var fiberServing: Double? = null
    var sodiumServing: Double? = null
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> energyKcal100g = nullableDoubleAdapter.fromJson(reader)
        1 -> energyKj100g = nullableDoubleAdapter.fromJson(reader)
        2 -> energy100g = nullableDoubleAdapter.fromJson(reader)
        3 -> carbohydrates100g = nullableDoubleAdapter.fromJson(reader)
        4 -> sugars100g = nullableDoubleAdapter.fromJson(reader)
        5 -> fiber100g = nullableDoubleAdapter.fromJson(reader)
        6 -> proteins100g = nullableDoubleAdapter.fromJson(reader)
        7 -> fat100g = nullableDoubleAdapter.fromJson(reader)
        8 -> saturatedFat100g = nullableDoubleAdapter.fromJson(reader)
        9 -> transFat100g = nullableDoubleAdapter.fromJson(reader)
        10 -> cholesterol100g = nullableDoubleAdapter.fromJson(reader)
        11 -> sodium100g = nullableDoubleAdapter.fromJson(reader)
        12 -> salt100g = nullableDoubleAdapter.fromJson(reader)
        13 -> calcium100g = nullableDoubleAdapter.fromJson(reader)
        14 -> iron100g = nullableDoubleAdapter.fromJson(reader)
        15 -> magnesium100g = nullableDoubleAdapter.fromJson(reader)
        16 -> potassium100g = nullableDoubleAdapter.fromJson(reader)
        17 -> zinc100g = nullableDoubleAdapter.fromJson(reader)
        18 -> vitaminA100g = nullableDoubleAdapter.fromJson(reader)
        19 -> vitaminC100g = nullableDoubleAdapter.fromJson(reader)
        20 -> vitaminD100g = nullableDoubleAdapter.fromJson(reader)
        21 -> vitaminE100g = nullableDoubleAdapter.fromJson(reader)
        22 -> vitaminK100g = nullableDoubleAdapter.fromJson(reader)
        23 -> vitaminB1100g = nullableDoubleAdapter.fromJson(reader)
        24 -> vitaminB2100g = nullableDoubleAdapter.fromJson(reader)
        25 -> vitaminB6100g = nullableDoubleAdapter.fromJson(reader)
        26 -> vitaminB12100g = nullableDoubleAdapter.fromJson(reader)
        27 -> folates100g = nullableDoubleAdapter.fromJson(reader)
        28 -> energyKcalServing = nullableDoubleAdapter.fromJson(reader)
        29 -> carbohydratesServing = nullableDoubleAdapter.fromJson(reader)
        30 -> proteinsServing = nullableDoubleAdapter.fromJson(reader)
        31 -> fatServing = nullableDoubleAdapter.fromJson(reader)
        32 -> fiberServing = nullableDoubleAdapter.fromJson(reader)
        33 -> sodiumServing = nullableDoubleAdapter.fromJson(reader)
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    return Nutriments(
        energyKcal100g = energyKcal100g,
        energyKj100g = energyKj100g,
        energy100g = energy100g,
        carbohydrates100g = carbohydrates100g,
        sugars100g = sugars100g,
        fiber100g = fiber100g,
        proteins100g = proteins100g,
        fat100g = fat100g,
        saturatedFat100g = saturatedFat100g,
        transFat100g = transFat100g,
        cholesterol100g = cholesterol100g,
        sodium100g = sodium100g,
        salt100g = salt100g,
        calcium100g = calcium100g,
        iron100g = iron100g,
        magnesium100g = magnesium100g,
        potassium100g = potassium100g,
        zinc100g = zinc100g,
        vitaminA100g = vitaminA100g,
        vitaminC100g = vitaminC100g,
        vitaminD100g = vitaminD100g,
        vitaminE100g = vitaminE100g,
        vitaminK100g = vitaminK100g,
        vitaminB1100g = vitaminB1100g,
        vitaminB2100g = vitaminB2100g,
        vitaminB6100g = vitaminB6100g,
        vitaminB12100g = vitaminB12100g,
        folates100g = folates100g,
        energyKcalServing = energyKcalServing,
        carbohydratesServing = carbohydratesServing,
        proteinsServing = proteinsServing,
        fatServing = fatServing,
        fiberServing = fiberServing,
        sodiumServing = sodiumServing
    )
  }

  override fun toJson(writer: JsonWriter, value_: Nutriments?) {
    if (value_ == null) {
      throw NullPointerException("value_ was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("energy-kcal_100g")
    nullableDoubleAdapter.toJson(writer, value_.energyKcal100g)
    writer.name("energy-kj_100g")
    nullableDoubleAdapter.toJson(writer, value_.energyKj100g)
    writer.name("energy_100g")
    nullableDoubleAdapter.toJson(writer, value_.energy100g)
    writer.name("carbohydrates_100g")
    nullableDoubleAdapter.toJson(writer, value_.carbohydrates100g)
    writer.name("sugars_100g")
    nullableDoubleAdapter.toJson(writer, value_.sugars100g)
    writer.name("fiber_100g")
    nullableDoubleAdapter.toJson(writer, value_.fiber100g)
    writer.name("proteins_100g")
    nullableDoubleAdapter.toJson(writer, value_.proteins100g)
    writer.name("fat_100g")
    nullableDoubleAdapter.toJson(writer, value_.fat100g)
    writer.name("saturated-fat_100g")
    nullableDoubleAdapter.toJson(writer, value_.saturatedFat100g)
    writer.name("trans-fat_100g")
    nullableDoubleAdapter.toJson(writer, value_.transFat100g)
    writer.name("cholesterol_100g")
    nullableDoubleAdapter.toJson(writer, value_.cholesterol100g)
    writer.name("sodium_100g")
    nullableDoubleAdapter.toJson(writer, value_.sodium100g)
    writer.name("salt_100g")
    nullableDoubleAdapter.toJson(writer, value_.salt100g)
    writer.name("calcium_100g")
    nullableDoubleAdapter.toJson(writer, value_.calcium100g)
    writer.name("iron_100g")
    nullableDoubleAdapter.toJson(writer, value_.iron100g)
    writer.name("magnesium_100g")
    nullableDoubleAdapter.toJson(writer, value_.magnesium100g)
    writer.name("potassium_100g")
    nullableDoubleAdapter.toJson(writer, value_.potassium100g)
    writer.name("zinc_100g")
    nullableDoubleAdapter.toJson(writer, value_.zinc100g)
    writer.name("vitamin-a_100g")
    nullableDoubleAdapter.toJson(writer, value_.vitaminA100g)
    writer.name("vitamin-c_100g")
    nullableDoubleAdapter.toJson(writer, value_.vitaminC100g)
    writer.name("vitamin-d_100g")
    nullableDoubleAdapter.toJson(writer, value_.vitaminD100g)
    writer.name("vitamin-e_100g")
    nullableDoubleAdapter.toJson(writer, value_.vitaminE100g)
    writer.name("vitamin-k_100g")
    nullableDoubleAdapter.toJson(writer, value_.vitaminK100g)
    writer.name("vitamin-b1_100g")
    nullableDoubleAdapter.toJson(writer, value_.vitaminB1100g)
    writer.name("vitamin-b2_100g")
    nullableDoubleAdapter.toJson(writer, value_.vitaminB2100g)
    writer.name("vitamin-b6_100g")
    nullableDoubleAdapter.toJson(writer, value_.vitaminB6100g)
    writer.name("vitamin-b12_100g")
    nullableDoubleAdapter.toJson(writer, value_.vitaminB12100g)
    writer.name("folates_100g")
    nullableDoubleAdapter.toJson(writer, value_.folates100g)
    writer.name("energy-kcal_serving")
    nullableDoubleAdapter.toJson(writer, value_.energyKcalServing)
    writer.name("carbohydrates_serving")
    nullableDoubleAdapter.toJson(writer, value_.carbohydratesServing)
    writer.name("proteins_serving")
    nullableDoubleAdapter.toJson(writer, value_.proteinsServing)
    writer.name("fat_serving")
    nullableDoubleAdapter.toJson(writer, value_.fatServing)
    writer.name("fiber_serving")
    nullableDoubleAdapter.toJson(writer, value_.fiberServing)
    writer.name("sodium_serving")
    nullableDoubleAdapter.toJson(writer, value_.sodiumServing)
    writer.endObject()
  }
}
