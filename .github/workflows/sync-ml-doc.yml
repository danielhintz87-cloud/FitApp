name: Sync ML Integration Doc

on:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: sync-ml-doc
  cancel-in-progress: false

jobs:
  generate-doc:
    runs-on: ubuntu-22.04
    timeout-minutes: 10

    steps:
      - name: Force IPv4 (avoid IPv6 hiccups)
        run: |
          echo 'precedence ::ffff:0:0/96  100' | sudo tee -a /etc/gai.conf
          sudo sysctl -w net.ipv6.conf.all.disable_ipv6=1
          sudo sysctl -w net.ipv6.conf.default.disable_ipv6=1
          sudo sysctl -w net.ipv6.conf.lo.disable_ipv6=1

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Write documentation file
        run: |
          mkdir -p docs
          cat > docs/ml-model-integration.md <<'EOF'
# ML-Modell Integration Anleitung für FitApp

## Übersicht
Diese Anleitung führt dich durch die Integration fortschrittlicher ML-Modelle für Echtzeit-Workout-Formanalyse in FitApp. Enthalten sind TensorFlow Lite und ONNX-Modelle für Pose-Estimation und Bewegungsanalyse.

---

## 1. Projekt-Vorbereitung

### 1.1 Erforderliche Abhängigkeiten (`app/build.gradle.kts`)
```kotlin
dependencies {
    // TensorFlow Lite (Versionen abgestimmt auf libs.versions.toml)
    implementation("org.tensorflow:tensorflow-lite:2.14.0")
    implementation("org.tensorflow:tensorflow-lite-support:0.4.4")
    implementation("org.tensorflow:tensorflow-lite-gpu:2.14.0")
    implementation("org.tensorflow:tensorflow-lite-gpu-delegate-plugin:0.4.4")

    // ONNX Runtime (Optional)
    implementation("com.microsoft.onnxruntime:onnxruntime-android:1.16.3")

    // CameraX (1.3.1 stabil)
    implementation("androidx.camera:camera-core:1.3.1")
    implementation("androidx.camera:camera-camera2:1.3.1")
    implementation("androidx.camera:camera-lifecycle:1.3.1")
    implementation("androidx.camera:camera-view:1.3.1")
}
