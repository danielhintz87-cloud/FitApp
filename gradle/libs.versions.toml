[versions]
kotlin = "2.0.20"
agp = "8.13.0"
# kotlinx-serialization 1.9.0 targets Kotlin 2.2, which is incompatible
# with the project's Kotlin 2.0.20 setup. Downgrade to the latest
# version built for Kotlin 2.0 to resolve metadata version conflicts.
serialization = "1.7.3"

# Versioning
axion-release = "1.18.12"

# Compose
compose-bom = "2025.08.01"
compose-compiler = "1.6.11" # compatible with Kotlin 2.0.20

# AndroidX / Core
navigation = "2.8.2"
activity = "1.9.2"
lifecycle = "2.8.6"
coroutines = "1.10.2"
room = "2.7.2"
work = "2.9.1"
appcompat = "1.7.0"
desugar = "2.0.4"
datastore = "1.1.1"
protobuf = "4.28.2"
browser = "1.8.0"

# Networking / JSON
okhttp = "4.12.0"
retrofit = "2.9.0"
moshi = "1.15.0"

# Media / Imaging
coil = "2.7.0"

# Camera / ML
camerax = "1.3.4"
mlkit-barcode = "17.3.0"

# Health
health-connect = "1.2.0-alpha01"

# TensorFlow Lite
tensorflow-lite = "2.17.0"
tensorflow-lite-support = "0.5.0"

# ONNX Runtime
onnxruntime = "1.22.0"

# Wear OS
wear-compose = "1.5.0"
wear-compose-foundation = "1.5.0"
wear-compose-navigation = "1.5.0"
wear-complications = "1.2.0"
play-services-wearable = "19.0.0"
horologist = "0.7.15"

# KSP (Compatible with Kotlin 2.0.20)
ksp = "2.0.20-1.0.25"

# Hilt Dependency Injection
hilt = "2.51.1"

# Testing
junit = "4.13.2"
android-test-junit = "1.2.1"
espresso = "3.6.1"
android-test-core = "1.6.1"
tensorflow-lite-metadata = "0.5.0"
robolectric = "4.12.2"
mockito = "5.12.0"
mockito-kotlin = "6.0.0"

[libraries]
# Kotlin / Serialization / Coroutines
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }

# Compose BOM und Kern
compose-bom = { module = "androidx.compose:compose-bom", version.ref = "compose-bom" }
compose-ui = { module = "androidx.compose.ui:ui" }
compose-material3 = { module = "androidx.compose.material3:material3" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
compose-material-icons = { module = "androidx.compose.material:material-icons-extended" }

# Navigation
navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navigation" }

# Activity
activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activity" }
activity-ktx = { module = "androidx.activity:activity-ktx", version.ref = "activity" }

# Lifecycle
lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }

# AppCompat
appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }

# Room
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
room-paging = { module = "androidx.room:room-paging", version.ref = "room" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
room-testing = { module = "androidx.room:room-testing", version.ref = "room" }
datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore" }
datastore-core = { module = "androidx.datastore:datastore", version.ref = "datastore" }
datastore-proto = { module = "androidx.datastore:datastore-core", version.ref = "datastore" }
protobuf-kotlin-lite = { module = "com.google.protobuf:protobuf-kotlin-lite", version.ref = "protobuf" }
protobuf-protoc = { module = "com.google.protobuf:protoc", version.ref = "protobuf" }
browser = { module = "androidx.browser:browser", version.ref = "browser" }

# Networking & JSON
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-converter-moshi = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofit" }
retrofit-logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
moshi = { module = "com.squareup.moshi:moshi", version.ref = "moshi" }
moshi-kotlin = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshi" }
moshi-codegen = { module = "com.squareup.moshi:moshi-kotlin-codegen", version.ref = "moshi" }

# Coil
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }

# CameraX
camerax-core = { module = "androidx.camera:camera-core", version.ref = "camerax" }
camerax-camera2 = { module = "androidx.camera:camera-camera2", version.ref = "camerax" }
camerax-lifecycle = { module = "androidx.camera:camera-lifecycle", version.ref = "camerax" }
camerax-view = { module = "androidx.camera:camera-view", version.ref = "camerax" }

# ML Kit
mlkit-barcode-scanning = { module = "com.google.mlkit:barcode-scanning", version.ref = "mlkit-barcode" }

# TensorFlow Lite
tensorflow-lite = { module = "org.tensorflow:tensorflow-lite", version.ref = "tensorflow-lite" }
tensorflow-lite-support = { module = "org.tensorflow:tensorflow-lite-support", version.ref = "tensorflow-lite-support" }
tensorflow-lite-metadata = { module = "org.tensorflow:tensorflow-lite-metadata", version.ref = "tensorflow-lite-metadata" }

# ONNX Runtime
onnxruntime-android = { module = "com.microsoft.onnxruntime:onnxruntime-android", version.ref = "onnxruntime" }

# Health Connect
health-connect-client = { module = "androidx.health.connect:connect-client", version.ref = "health-connect" }

# Wear OS
wear-compose-material = { module = "androidx.wear.compose:compose-material", version.ref = "wear-compose" }
wear-compose-foundation = { module = "androidx.wear.compose:compose-foundation", version.ref = "wear-compose-foundation" }
wear-compose-navigation = { module = "androidx.wear.compose:compose-navigation", version.ref = "wear-compose-navigation" }
wear-complications = { module = "androidx.wear:wear-complications-data", version.ref = "wear-complications" }
play-services-wearable = { module = "com.google.android.gms:play-services-wearable", version.ref = "play-services-wearable" }
horologist-compose-layout = { module = "com.google.android.horologist:horologist-compose-layout", version.ref = "horologist" }
horologist-compose-material = { module = "com.google.android.horologist:horologist-compose-material", version.ref = "horologist" }

# WorkManager
work-runtime-ktx = { module = "androidx.work:work-runtime-ktx", version.ref = "work" }

# Desugaring
desugar-jdk-libs = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugar" }

# Hilt Dependency Injection
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-android-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }
hilt-navigation-compose = { module = "androidx.hilt:hilt-navigation-compose", version = "1.2.0" }

# Testing
junit = { module = "junit:junit", version.ref = "junit" }
android-test-junit = { module = "androidx.test.ext:junit", version.ref = "android-test-junit" }
espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso" }
android-test-core = { module = "androidx.test:core", version.ref = "android-test-core" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockito-kotlin" }
mockito-inline = { module = "org.mockito:mockito-inline", version.ref = "mockito" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
protobuf = { id = "com.google.protobuf", version = "0.9.4" }
axion-release = { id = "pl.allegro.tech.build.axion-release", version.ref = "axion-release" }
